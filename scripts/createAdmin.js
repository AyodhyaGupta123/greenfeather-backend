const mongoose = require('mongoose');
require('dotenv').config();
const User = require('../models/User');

const connectDB = async () => {
  try {
    const conn = await mongoose.connect(process.env.MONGO_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    console.log(`MongoDB Connected: ${conn.connection.host}`);
  } catch (error) {
    console.error(`Error: ${error.message}`);
    process.exit(1);
  }
};

const createAdmin = async () => {
  try {
    await connectDB();
    
    // Get command line arguments
    const args = process.argv.slice(2);
    if (args.length < 3) {
      console.log('Usage: node createAdmin.js <name> <email> <password> [permissions]');
      console.log('Example: node createAdmin.js "John Admin" "admin@example.com" "Admin123!"');
      process.exit(1);
    }

    const [name, email, password] = args;
    
    // Check if super admin exists
    const superAdmin = await User.findOne({ role: 'superadmin' });
    if (!superAdmin) {
      console.error('❌ Super Admin not found. Please run initSuperAdmin.js first.');
      process.exit(1);
    }

    // Check if admin already exists
    const adminExists = await User.findOne({ email });
    if (adminExists) {
      console.error('❌ Admin with this email already exists:', email);
      process.exit(1);
    }

    // Create admin with default permissions
    const admin = await User.createAdmin({
      name,
      email,
      password,
      permissions: {
        users: { view: true, create: false, edit: false, delete: false },
        products: { view: true, create: false, edit: false, delete: false },
        orders: { view: true, create: false, edit: false, delete: false },
        sellers: { view: true, create: false, edit: false, delete: false },
        reports: { view: true, create: false, edit: false, delete: false },
        settings: { view: false, create: false, edit: false, delete: false }
      }
    }, superAdmin._id);

    console.log('✅ Admin created successfully!');
    console.log('Name:', admin.name);
    console.log('Email:', admin.email);
    console.log('Password:', password);
    console.log('Role:', admin.role);
    console.log('Generated by:', superAdmin.name);
    console.log('⚠️  Please change the password after first login!');
    
    process.exit(0);
  } catch (error) {
    console.error('❌ Error creating admin:', error.message);
    process.exit(1);
  }
};

// Run the script
createAdmin();
